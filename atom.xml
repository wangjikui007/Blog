<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>henrytb&#39;s blog</title>
  
  <subtitle>I&#39;m a vegetable chicken!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://henrytbtrue.github.io/"/>
  <updated>2018-10-01T06:44:01.560Z</updated>
  <id>https://henrytbtrue.github.io/</id>
  
  <author>
    <name>henrytb</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Set详解</title>
    <link href="https://henrytbtrue.github.io/Set%E8%AF%A6%E8%A7%A3/"/>
    <id>https://henrytbtrue.github.io/Set详解/</id>
    <published>2018-10-01T06:06:53.000Z</published>
    <updated>2018-10-01T06:44:01.560Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="text-Set-详解"><a href="#text-Set-详解" class="headerlink" title="$$\text{ Set 详解 }$$"></a>$$\text{ Set 详解 }$$</h1><p>所谓set，就是STL里的集合。可以快速地插入和查找某个元素。</p><a id="more"></a><h2 id="声明set"><a href="#声明set" class="headerlink" title="声明set"></a>声明set</h2><p><code>set&lt;type&gt; name;</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s1;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">char</span>&gt; s2;</span><br><span class="line"><span class="comment">//---------------------------</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">qwq</span>&#123;</span></span><br><span class="line">    ...;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">set</span>&lt;qwq&gt; s3;</span><br></pre></td></tr></table></figure><h2 id="应用set"><a href="#应用set" class="headerlink" title="应用set"></a>应用set</h2><h3 id="插入"><a href="#插入" class="headerlink" title="插入"></a>插入</h3><p>使用<code>insert()</code>函数来插入set。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line">s.insert(<span class="number">1</span>);</span><br><span class="line">s.insert(<span class="number">2</span>);</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3><p>使用<code>insert()</code>函数查找这个变量的值是不是在set里。</p><blockquote><p>是返回<code>true</code>，否则返回<code>false</code>。</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line">s.insert(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(s.count(<span class="number">1</span>))<span class="built_in">printf</span>(<span class="string">"hehe"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"wawa"</span>);</span><br></pre></td></tr></table></figure><h3 id="判空"><a href="#判空" class="headerlink" title="判空"></a>判空</h3><p><code>empty()</code>函数可以返回该set是否为空的信息。</p><blockquote><p>是返回<code>true</code>，否则返回<code>false</code>。</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line">s.insert(<span class="number">1</span>);</span><br><span class="line">s.empty(); <span class="comment">//返回0</span></span><br></pre></td></tr></table></figure><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><p><code>erase()</code>函数可以删除set中的一个元素。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line">s.insert(<span class="number">1</span>);</span><br><span class="line">s.empty(); <span class="comment">//返回0</span></span><br><span class="line">s.erase(<span class="number">1</span>);</span><br><span class="line">s.empty(); <span class="comment">//返回1</span></span><br></pre></td></tr></table></figure><h3 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h3><p>使用迭代器！</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; s;</span><br><span class="line">s.insert(<span class="number">1</span>);</span><br><span class="line">s.insert(<span class="number">3</span>);</span><br><span class="line">s.insert(<span class="number">4</span>);</span><br><span class="line">s.insert(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt;::iterator it=s.begin();it!=s.end();it++)&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;*it&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//由于set会自动给元素排序</span></span><br><span class="line"><span class="comment">//输出:</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">2</span></span><br><span class="line"><span class="comment">3</span></span><br><span class="line"><span class="comment">4</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><hr><h2 id="完结撒花✿✿ヽ-°▽°-ノ✿！"><a href="#完结撒花✿✿ヽ-°▽°-ノ✿！" class="headerlink" title="完结撒花✿✿ヽ(°▽°)ノ✿！"></a>完结撒花✿✿ヽ(°▽°)ノ✿！</h2><p>QAQ~</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;text-Set-详解&quot;&gt;&lt;a href=&quot;#text-Set-详解&quot; class=&quot;headerlink&quot; title=&quot;$$\text{ Set 详解 }$$&quot;&gt;&lt;/a&gt;$$\text{ Set 详解 }$$&lt;/h1&gt;&lt;p&gt;所谓set，就是STL里的集合。可以快速地插入和查找某个元素。&lt;/p&gt;
    
    </summary>
    
      <category term="算法详解" scheme="https://henrytbtrue.github.io/categories/%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3/"/>
    
    
      <category term="算法详解" scheme="https://henrytbtrue.github.io/tags/%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>题解 Luogu P3472 MAF-Mafia</title>
    <link href="https://henrytbtrue.github.io/%E9%A2%98%E8%A7%A3-Luogu-P3472-MAF-Mafia/"/>
    <id>https://henrytbtrue.github.io/题解-Luogu-P3472-MAF-Mafia/</id>
    <published>2018-09-30T04:27:01.000Z</published>
    <updated>2018-10-01T07:29:17.803Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="text-Luogu-P3472-MAF-Mafia"><a href="#text-Luogu-P3472-MAF-Mafia" class="headerlink" title="$$\text{ Luogu P3472 MAF-Mafia }$$"></a>$$\text{ Luogu P3472 MAF-Mafia }$$</h1><p><a href="https://www.luogu.org/problemnew/show/P3472" target="_blank" rel="noopener">原题</a></p><h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>给定n个神枪手，每个神枪手瞄准一个人，以一定顺序开枪，问最少和最多死多少人<br><a id="more"></a></p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h2><blockquote><p>最少的情况是每个联通块只有入度为零的点活下来（如果是环就留一个人）；最多的情况就是从入度为零的开始到结束。</p></blockquote><p>注意自环！</p><h2 id="AC-Code"><a href="#AC-Code" class="headerlink" title="AC Code:"></a>AC Code:</h2><p><del>吴老师那玄学的码风</del></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> <span class="keyword">const</span> N=<span class="number">2000001</span>;</span><br><span class="line"><span class="keyword">int</span> n,used[N],p[N],s[N],ind[N],size[N];</span><br><span class="line"><span class="keyword">int</span> head,tail,q[N],d[N];</span><br><span class="line"><span class="keyword">bool</span> f[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">used[x]=y;</span><br><span class="line"><span class="keyword">if</span> (used[p[x]]==<span class="number">0</span>) dfs(p[x],y);</span><br><span class="line">used[x]=used[p[x]];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">freopen(<span class="string">"mafia.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"mafia.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d\n"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;p[i]);</span><br><span class="line">ind[p[i]]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> T=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">if</span> (used[i]==<span class="number">0</span>) dfs(i,++T);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=T;i++) s[i]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) s[used[i]]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">if</span> (ind[i]==<span class="number">0</span>) s[used[i]]++;</span><br><span class="line"><span class="keyword">int</span> Mans=<span class="number">0</span>,mans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) size[used[i]]++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=T;i++) <span class="keyword">if</span> ((s[i]==<span class="number">0</span>) &amp;&amp; (size[i]&gt;<span class="number">1</span>)) Mans++; <span class="keyword">else</span> <span class="keyword">if</span> (s[i]&gt;<span class="number">0</span>) Mans+=s[i];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=T;i++) s[i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) s[used[i]]++;</span><br><span class="line">head=<span class="number">1</span>; tail=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">if</span> (ind[i]==<span class="number">0</span>) &#123;</span><br><span class="line">q[++tail]=i; f[i]=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (head&lt;=tail)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x=q[head];</span><br><span class="line">s[used[x]]--;</span><br><span class="line"><span class="keyword">if</span> (d[x]==<span class="number">1</span>) &#123;</span><br><span class="line"> mans++; &#125;</span><br><span class="line"><span class="keyword">if</span> (d[x]==<span class="number">0</span>)&#123;</span><br><span class="line">d[p[x]]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">ind[p[x]]--;</span><br><span class="line"><span class="keyword">if</span> ((ind[p[x]]==<span class="number">0</span>) &amp;&amp; (!f[p[x]])) </span><br><span class="line">&#123;</span><br><span class="line">q[++tail]=p[x]; f[p[x]]=<span class="literal">true</span>; </span><br><span class="line">&#125;</span><br><span class="line">head++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">if</span> ((!f[i]) &amp;&amp; (d[i]==<span class="number">1</span>)) &#123;</span><br><span class="line">q[++tail]=i; f[i]=<span class="literal">true</span>; &#125;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (head&lt;=tail)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x=q[head];</span><br><span class="line">s[used[x]]--;</span><br><span class="line"><span class="keyword">if</span> (d[x]==<span class="number">1</span>) &#123;</span><br><span class="line">    mans++; &#125;</span><br><span class="line"><span class="keyword">if</span> (d[x]==<span class="number">0</span>)&#123;</span><br><span class="line">d[p[x]]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">ind[p[x]]--;</span><br><span class="line"><span class="keyword">if</span> ((ind[p[x]]==<span class="number">0</span>) &amp;&amp; (!f[p[x]])) </span><br><span class="line">&#123;</span><br><span class="line">    q[++tail]=p[x]; f[p[x]]=<span class="literal">true</span>; </span><br><span class="line">&#125;</span><br><span class="line">head++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=T;i++) &#123;</span><br><span class="line">    mans+=(<span class="number">1</span>+s[i])/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,mans,n-Mans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="完结撒花✿✿ヽ-°▽°-ノ✿！"><a href="#完结撒花✿✿ヽ-°▽°-ノ✿！" class="headerlink" title="完结撒花✿✿ヽ(°▽°)ノ✿！"></a>完结撒花✿✿ヽ(°▽°)ノ✿！</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;text-Luogu-P3472-MAF-Mafia&quot;&gt;&lt;a href=&quot;#text-Luogu-P3472-MAF-Mafia&quot; class=&quot;headerlink&quot; title=&quot;$$\text{ Luogu P3472 MAF-Mafia }$$&quot;&gt;&lt;/a&gt;$$\text{ Luogu P3472 MAF-Mafia }$$&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.luogu.org/problemnew/show/P3472&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原题&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目描述：&quot;&gt;&lt;a href=&quot;#题目描述：&quot; class=&quot;headerlink&quot; title=&quot;题目描述：&quot;&gt;&lt;/a&gt;题目描述：&lt;/h2&gt;&lt;p&gt;给定n个神枪手，每个神枪手瞄准一个人，以一定顺序开枪，问最少和最多死多少人&lt;br&gt;
    
    </summary>
    
      <category term="题解" scheme="https://henrytbtrue.github.io/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
      <category term="题解" scheme="https://henrytbtrue.github.io/tags/%E9%A2%98%E8%A7%A3/"/>
    
      <category term="Luogu" scheme="https://henrytbtrue.github.io/tags/Luogu/"/>
    
  </entry>
  
  <entry>
    <title>ZROI-9.23-搜索</title>
    <link href="https://henrytbtrue.github.io/ZROI-9-23-%E6%90%9C%E7%B4%A2/"/>
    <id>https://henrytbtrue.github.io/ZROI-9-23-搜索/</id>
    <published>2018-09-23T01:01:39.000Z</published>
    <updated>2018-10-01T06:08:36.265Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="text-搜索"><a href="#text-搜索" class="headerlink" title="$$\text{ 搜索 }$$"></a>$$\text{ 搜索 }$$</h1><hr><h2 id="text-引入——递归"><a href="#text-引入——递归" class="headerlink" title="$$\text{ 引入——递归 }$$"></a>$$\text{ 引入——递归 }$$</h2><p>这是一个递归求幂的程序</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f(x,y<span class="number">-1</span>)*x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>没有边界条件！</strong></p><a id="more"></a><hr><h2 id="text-Luogu-P1706-全排列问题"><a href="#text-Luogu-P1706-全排列问题" class="headerlink" title="$$\text{ Luogu P1706 全排列问题 }$$"></a>$$\text{ Luogu P1706 全排列问题 }$$</h2><p><a href="https://www.luogu.org/problemnew/show/P1706" target="_blank" rel="noopener">原题</a></p><p>输出自然数1到n所有不重复的排列，即n的全排列，要求所产生的任一数字序列中不允许出现重复的数字。</p><p>数据范围：$1\leq n\leq 9$</p><h3 id="STL大法吼！"><a href="#STL大法吼！" class="headerlink" title="STL大法吼！"></a><del>STL大法吼！</del></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">next_permutation(a,a+n);<span class="comment">//求下一个排列</span></span><br></pre></td></tr></table></figure><h3 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h3><p>正解当然是搜索啦qwq</p><p>AC Code:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[<span class="number">11</span>];</span><br><span class="line"><span class="keyword">bool</span> book[<span class="number">11</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;n)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cout</span>&lt;&lt;<span class="string">"    "</span>&lt;&lt;a[i];</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!book[i])&#123;</span><br><span class="line">                a[x]=i;</span><br><span class="line">                book[i]=<span class="literal">true</span>;</span><br><span class="line">                dfs(x+<span class="number">1</span>);</span><br><span class="line">                book[i]=<span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    dfs(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="text-Luogu-P2404-自然数的拆分问题"><a href="#text-Luogu-P2404-自然数的拆分问题" class="headerlink" title="$$\text{ Luogu P2404 自然数的拆分问题 }$$"></a>$$\text{ Luogu P2404 自然数的拆分问题 }$$</h2><p><a href="https://www.luogu.org/problemnew/show/P2404" target="_blank" rel="noopener">原题</a></p><p>任何一个大于1的自然数n，总可以拆分成若干个小于n的自然数之和。</p><h3 id="歪解：打表qwq"><a href="#歪解：打表qwq" class="headerlink" title="歪解：打表qwq"></a>歪解：打表qwq</h3><p>感谢@minecraft_herobrine的代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt; </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">"1+1"</span>);</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">3</span>) <span class="built_in">printf</span>(<span class="string">"1+1+1\n1+2"</span>);</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">4</span>) <span class="built_in">printf</span>(<span class="string">"1+1+1+1\n1+1+2\n1+3\n2+2"</span>);</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">5</span>) <span class="built_in">printf</span>(<span class="string">"1+1+1+1+1\n1+1+1+2\n1+1+3\n1+2+2\n1+4\n2+3"</span>);</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">6</span>)<span class="built_in">printf</span>(<span class="string">"1+1+1+1+1+1\n1+1+1+1+2\n1+1+1+3\n1+1+2+2\n1+1+4\n1+2+3\n1+5\n2+2+2\n2+4\n3+3"</span>);</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">7</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1+1+1+1+1+1+1\n1+1+1+1+1+2\n1+1+1+1+3\n1+1+1+2+2\n1+1+1+4\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1+1+2+3\n1+1+5\n1+2+2+2\n1+2+4\n1+3+3\n1+6\n2+2+3\n2+5\n3+4"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">8</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1+1+1+1+1+1+1+1\n1+1+1+1+1+1+2\n1+1+1+1+1+3\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1+1+1+1+2+2\n1+1+1+1+4\n1+1+1+2+3\n1+1+1+5\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"1+1+2+2+2\n1+1+2+4\n1+1+3+3\n1+1+6\n1+2+2+3\n1+2+5\n1+3+4\n1+7\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"2+2+2+2\n2+2+4\n2+3+3\n2+6\n3+5\n4+4"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="正解仍然是搜索"><a href="#正解仍然是搜索" class="headerlink" title="正解仍然是搜索"></a>正解仍然是搜索</h3><p><del>不然这节课讲什么？</del></p><p>AC Code:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> n 15</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> For(i,a,b) for(int i=a;i&lt;=b;i++)</span></span><br><span class="line"><span class="keyword">int</span> N,A[n];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> d,<span class="keyword">int</span> last,<span class="keyword">int</span> sum)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(sum==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(d==<span class="number">2</span>)<span class="keyword">return</span>;</span><br><span class="line">        For(i,<span class="number">1</span>,d<span class="number">-1</span>)<span class="built_in">printf</span>(<span class="string">"%d%c"</span>,A[i],<span class="string">"+\n"</span>[i==d<span class="number">-1</span>]);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    For(i,last,sum)A[d]=i,dfs(d+<span class="number">1</span>,i,sum-i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;N);</span><br><span class="line">    dfs(<span class="number">1</span>,<span class="number">1</span>,N);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><del>强势压行qwq</del></p><hr><h2 id="text-Luogu-P1219-八皇后"><a href="#text-Luogu-P1219-八皇后" class="headerlink" title="$$\text{ Luogu P1219 八皇后 }$$"></a>$$\text{ Luogu P1219 八皇后 }$$</h2><p><a href="https://www.luogu.org/problemnew/show/P1219" target="_blank" rel="noopener">原题</a></p><p>检查一个如下的6 x 6的跳棋棋盘，有六个棋子被放置在棋盘上，使得每行、每列有且只有一个，每条对角线(包括两条主对角线的所有平行线)上至多有一个棋子。</p><h3 id="正解还是搜索"><a href="#正解还是搜索" class="headerlink" title="正解还是搜索"></a>正解还是搜索</h3><p><del>我这样下去是不是要烦死你</del></p><p>AC Code:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> For(i,a,b) for(int i=a;i&lt;=b;i++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Rep(i,a,b) for(int i=a;i&gt;=b;i--)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> n 105</span></span><br><span class="line"><span class="keyword">int</span> N,M,A[n],B[n],C[n],D[n];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(d&gt;N)&#123;</span><br><span class="line">        M++;</span><br><span class="line">        <span class="keyword">if</span>(M&lt;=<span class="number">3</span>)&#123;</span><br><span class="line">            For(i,<span class="number">1</span>,N)<span class="built_in">printf</span>(<span class="string">"%d "</span>,A[i]);</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    For(i,<span class="number">1</span>,N)</span><br><span class="line">    <span class="keyword">if</span>(!B[i]&amp;&amp;!C[i+d]&amp;&amp;!D[i-d+N])&#123;</span><br><span class="line">        A[d]=i;</span><br><span class="line">        B[i]=<span class="number">1</span>;</span><br><span class="line">        C[i+d]=<span class="number">1</span>;</span><br><span class="line">        D[i-d+N]=<span class="number">1</span>;</span><br><span class="line">        DFS(d+<span class="number">1</span>);</span><br><span class="line">        B[i]=<span class="number">0</span>;</span><br><span class="line">        C[i+d]=<span class="number">0</span>;</span><br><span class="line">        D[i-d+N]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;N);</span><br><span class="line">    DFS(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,M);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><del>这次没压行qwq</del></p><hr><h2 id="text-Luogu-P1657-选书"><a href="#text-Luogu-P1657-选书" class="headerlink" title="$$\text{ Luogu P1657 选书 }$$"></a>$$\text{ Luogu P1657 选书 }$$</h2><p><a href="https://www.luogu.org/problemnew/show/P1657" target="_blank" rel="noopener">原题</a></p><p>你一共有$n$本书。有$n$个人参加培训，每个人有两本在编号为1~n之间的喜欢的书。求每个人都拿到自己喜欢的书的方案数。</p><p>So easy! <del>妈妈再也不用担心我的学习！</del></p><h3 id="正解又是搜索"><a href="#正解又是搜索" class="headerlink" title="正解又是搜索"></a>正解又是搜索</h3><p><del>烦死你</del></p><p>AC Code:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,ans,A[<span class="number">25</span>],B[<span class="number">25</span>],V[<span class="number">25</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(d&gt;n)&#123;</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!V[A[d]])V[A[d]]=<span class="number">1</span>,dfs(d+<span class="number">1</span>),V[A[d]]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(!V[B[d]])V[B[d]]=<span class="number">1</span>,dfs(d+<span class="number">1</span>),V[B[d]]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">0</span>)<span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">"0"</span>),<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">cin</span>&gt;&gt;A[i]&gt;&gt;B[i];</span><br><span class="line">    dfs(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="text-CODE-VS-1116-四色问题"><a href="#text-CODE-VS-1116-四色问题" class="headerlink" title="$$\text{ CODE[VS] 1116 四色问题 }$$"></a>$$\text{ CODE[VS] 1116 四色问题 }$$</h2><p><a href="http://codevs.cn/problem/1116/" target="_blank" rel="noopener">原题</a></p><p>给定N（小于等于8）个点的地图，以及地图上各点的相邻关系，请输出用4种颜色将地图涂色的所有方案数（要求相邻两点不能涂成相同的颜色）</p><h3 id="搜索：我又来了"><a href="#搜索：我又来了" class="headerlink" title="搜索：我又来了"></a>搜索：我又来了</h3><p><del>哭QAQ</del></p><p>AC Code:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> <span class="built_in">map</span>[<span class="number">8</span>][<span class="number">8</span>] = &#123;&#125;, n, color[<span class="number">8</span>] = &#123;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> flag[<span class="number">4</span>] = &#123;&#125;;</span><br><span class="line">    <span class="keyword">int</span> i, num = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; a; i++)</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span>[a][i])</span><br><span class="line">            flag[color[i]] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">        <span class="keyword">if</span> (!flag[i])</span><br><span class="line">            num++;</span><br><span class="line">    <span class="keyword">if</span> (a == n - <span class="number">1</span>) <span class="keyword">return</span> num;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">            <span class="keyword">if</span> (!flag[i]) &#123;</span><br><span class="line">                color[a] = i;</span><br><span class="line">                ans += search(a + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; <span class="built_in">map</span>[i][j];</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; search(<span class="number">0</span>) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="text-完结撒花✿✿ヽ-°▽°-ノ✿"><a href="#text-完结撒花✿✿ヽ-°▽°-ノ✿" class="headerlink" title="$$\text{ 完结撒花✿✿ヽ(°▽°)ノ✿ }$$"></a>$$\text{ 完结撒花✿✿ヽ(°▽°)ノ✿ }$$</h2><p>QAQ</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;text-搜索&quot;&gt;&lt;a href=&quot;#text-搜索&quot; class=&quot;headerlink&quot; title=&quot;$$\text{ 搜索 }$$&quot;&gt;&lt;/a&gt;$$\text{ 搜索 }$$&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;text-引入——递归&quot;&gt;&lt;a href=&quot;#text-引入——递归&quot; class=&quot;headerlink&quot; title=&quot;$$\text{ 引入——递归 }$$&quot;&gt;&lt;/a&gt;$$\text{ 引入——递归 }$$&lt;/h2&gt;&lt;p&gt;这是一个递归求幂的程序&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; y)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; f(x,y&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;)*x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;没有边界条件！&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="OI笔记" scheme="https://henrytbtrue.github.io/categories/OI%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="ZROI" scheme="https://henrytbtrue.github.io/tags/ZROI/"/>
    
      <category term="笔记" scheme="https://henrytbtrue.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>ZROI 9.9 排序</title>
    <link href="https://henrytbtrue.github.io/ZROI-9-9-%E6%8E%92%E5%BA%8F/"/>
    <id>https://henrytbtrue.github.io/ZROI-9-9-排序/</id>
    <published>2018-09-11T10:40:58.000Z</published>
    <updated>2018-10-01T06:08:25.169Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="O-n-2-text-排序算法"><a href="#O-n-2-text-排序算法" class="headerlink" title="$$ O(n^2)\text{ 排序算法 }$$"></a>$$ O(n^2)\text{ 排序算法 }$$</h2><hr><h3 id="text-选择排序"><a href="#text-选择排序" class="headerlink" title="$$\text{ 选择排序 }$$"></a>$$\text{ 选择排序 }$$</h3><p>每次找最大（或最小）的一个数，放到对应位置。</p><hr><h3 id="text-插入排序"><a href="#text-插入排序" class="headerlink" title="$$\text{ 插入排序 }$$"></a>$$\text{ 插入排序 }$$</h3><p>for一遍，每次往前查，找到相应位置。 </p><p><img src="https://i.loli.net/2018/09/09/5b947b6dceeda.gif" alt=""></p><hr><h3 id="text-冒泡排序"><a href="#text-冒泡排序" class="headerlink" title="$$\text{ 冒泡排序 }$$"></a>$$\text{ 冒泡排序 }$$</h3><p>n轮，每次比较相邻元素。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">    <span class="keyword">if</span>(a[i]&gt;=a[j])swap(a[i],a[j]);</span><br></pre></td></tr></table></figure><blockquote><p>思考：逆序对</p></blockquote><hr><h2 id="O-nlogn-text-排序算法"><a href="#O-nlogn-text-排序算法" class="headerlink" title="$$ O(nlogn)\text{ 排序算法 }$$"></a>$$ O(nlogn)\text{ 排序算法 }$$</h2><hr><h3 id="text-快速排序"><a href="#text-快速排序" class="headerlink" title="$$\text{ 快速排序 }$$"></a>$$\text{ 快速排序 }$$</h3><ul><li>每次随机选择一个数作为分界点  </li><li>大的放右边小的放左边  </li><li>递归对两边分治  </li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (L&gt;=R) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> i=L,j=R,tmp=A[(L+R)/<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span> (i&lt;=j)&#123;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;=j&amp;&amp;A[i]&lt;tmp) i++;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;=j&amp;&amp;A[j]&gt;tmp) j--;</span><br><span class="line">        <span class="keyword">if</span> (i&lt;=j)&#123;</span><br><span class="line">            swap(A[i],A[j]);</span><br><span class="line">            i++,j--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i&lt;R) work(i,R);</span><br><span class="line">    <span class="keyword">if</span> (L&lt;j) work(L,j);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>如知道随机种子或每次选中间数，如何卡至$O(n^2)$？</p></blockquote><blockquote><p>使中间数为最小值。</p></blockquote><h4 id="STL大法吼！"><a href="#STL大法吼！" class="headerlink" title="STL大法吼！"></a><del>STL大法吼！</del></h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">sort(a,a+n); <span class="comment">//a[0..n-1]</span></span><br><span class="line">sort(a.begin(),a.end()); <span class="comment">//vector</span></span><br><span class="line">sort(a.rbegin(),a.rend()); <span class="comment">//sort+reverse (vector)</span></span><br><span class="line"><span class="comment">//------------------------------------------------</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(aaa a,aaa b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.aa&lt;b.aa;</span><br><span class="line">&#125;</span><br><span class="line">sort(a,a+n,cmp);</span><br><span class="line"><span class="comment">//------------------------------------------------</span></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (aaa a,aaa b)&#123;</span><br><span class="line"><span class="keyword">return</span> a.aa&lt;b.aa;</span><br><span class="line">&#125;</span><br><span class="line">sort(a,a+n);</span><br></pre></td></tr></table></figure><h4 id="STL比较函数当两个数相等的时候一定要返回0！！！"><a href="#STL比较函数当两个数相等的时候一定要返回0！！！" class="headerlink" title="STL比较函数当两个数相等的时候一定要返回0！！！"></a>STL比较函数当两个数相等的时候一定要返回0！！！</h4><blockquote><p>Reverse Sort:  </p><ul><li>给你一个序列，每次操作能翻转一个区间，代价为这个区间的长度  </li><li>在$O(nlogn)$的总代价内将整个序列排序</li></ul></blockquote><hr><h3 id="text-归并排序"><a href="#text-归并排序" class="headerlink" title="$$\text{ 归并排序 }$$"></a>$$\text{ 归并排序 }$$</h3><ul><li>从中间断开为左右区间  </li><li>递归对两边分治  </li><li>对已经有序的两边区间进行归并</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">work</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (L==R) <span class="keyword">return</span>;</span><br><span class="line">work(L,Mid);</span><br><span class="line">work(Mid+<span class="number">1</span>,R);</span><br><span class="line"><span class="keyword">int</span> tl=L,tr=Mid+<span class="number">1</span>,t=L;</span><br><span class="line"><span class="keyword">while</span> (tl&lt;=Mid&amp;&amp;tr&lt;=R)&#123;</span><br><span class="line"><span class="keyword">if</span> (A[tl]&lt;A[tr]) B[t++]=A[tl++];<span class="keyword">else</span> B[t++]=A[tr++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (tl&lt;=Mid) B[t++]=A[tl++];</span><br><span class="line"><span class="keyword">while</span> (tr&lt;=R) B[t++]=A[tr++];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=L;i&lt;=R;i++) A[i]=B[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="STL大法吼！-1"><a href="#STL大法吼！-1" class="headerlink" title="STL大法吼！"></a><del>STL大法吼！</del></h4><p>区间合并：inplace_merge</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//a[0..n-1],a[n..n*2-1]合并</span></span><br><span class="line">inplace_merge(a,a+n,a+n*<span class="number">2</span>);</span><br></pre></td></tr></table></figure><blockquote><p>扩展：归并排序求逆序对</p></blockquote><hr><h2 id="text-不基于比较的排序算法"><a href="#text-不基于比较的排序算法" class="headerlink" title="$$\text{ 不基于比较的排序算法 }$$"></a>$$\text{ 不基于比较的排序算法 }$$</h2><hr><h3 id="text-桶排序"><a href="#text-桶排序" class="headerlink" title="$$\text{ 桶排序 }$$"></a>$$\text{ 桶排序 }$$</h3><p>一个萝卜一个坑</p><p>时间复杂度$O(n+m)$</p><hr><h3 id="text-基数排序"><a href="#text-基数排序" class="headerlink" title="$$\text{ 基数排序 }$$"></a>$$\text{ 基数排序 }$$</h3><ul><li>分段分别桶排，从低位到高位依次作为关键字  </li><li>比如设当前所有数已经按后𝑘位排好了序，那么后𝑘+1位的排序就是按第𝑘+1位排，相同的就按原顺序排  </li><li>视段长的大小，开这么多的桶，求出比𝑥小的数有多少个，然后快速把每个数放到该放的位置去。</li></ul><p><del>[WC2017] 挑战</del></p>]]></content>
    
    <summary type="html">
    
      ZROI笔记——排序
    
    </summary>
    
      <category term="OI笔记" scheme="https://henrytbtrue.github.io/categories/OI%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="ZROI" scheme="https://henrytbtrue.github.io/tags/ZROI/"/>
    
      <category term="笔记" scheme="https://henrytbtrue.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>测试</title>
    <link href="https://henrytbtrue.github.io/%E6%B5%8B%E8%AF%95/"/>
    <id>https://henrytbtrue.github.io/测试/</id>
    <published>2018-09-10T13:07:44.000Z</published>
    <updated>2018-09-10T13:27:27.041Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><hr><p>代码当然是可以的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>latex qwq</p><p>$1$</p>]]></content>
    
    <summary type="html">
    
      没什么
    
    </summary>
    
      <category term="测试文档" scheme="https://henrytbtrue.github.io/categories/%E6%B5%8B%E8%AF%95%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="测试" scheme="https://henrytbtrue.github.io/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
