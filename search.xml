<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[ZROI 9.9 排序]]></title>
    <url>%2FZROI-9-9-%E6%8E%92%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[$$ O(n^2)\text{ 排序算法 }$$ $$\text{ 选择排序 }$$每次找最大（或最小）的一个数，放到对应位置。 $$\text{ 插入排序 }$$for一遍，每次往前查，找到相应位置。 $$\text{ 冒泡排序 }$$n轮，每次比较相邻元素。 123for(int i=1;i&lt;=n;i++) for(int j=1;j&lt;=n;j++) if(a[i]&gt;=a[j])swap(a[i],a[j]); 思考：逆序对 $$ O(nlogn)\text{ 排序算法 }$$ $$\text{ 快速排序 }$$ 每次随机选择一个数作为分界点 大的放右边小的放左边 递归对两边分治 123456789101112131415161718192021222324252627282930313233343536void work(int L,int R)&#123; if (L&gt;=R) return; int i=L,j=R,tmp=A[(L+R)/2]; while (i&lt;=j)&#123; while (i&lt;=j&amp;&amp;A[i]&lt;tmp) i++; while (i&lt;=j&amp;&amp;A[j]&gt;tmp) j--; if (i&lt;=j)&#123; swap(A[i],A[j]); i++,j--; &#125; &#125; if (i&lt;R) work(i,R); if (L&lt;j) work(L,j);&#125;``` &gt; 如知道随机种子或每次选中间数，如何卡至$O(n^2)$？&gt; 使中间数为最小值。## ~~STL大法吼！~~```cppsort(a,a+n); //a[0..n-1]sort(a.begin(),a.end()); //vectorsort(a.rbegin(),a.rend()); //sort+reverse (vector)//------------------------------------------------bool cmp(aaa a,aaa b)&#123; return a.aa&lt;b.aa;&#125;sort(a,a+n,cmp);//------------------------------------------------bool operator &lt; (aaa a,aaa b)&#123; return a.aa&lt;b.aa;&#125;sort(a,a+n); STL比较函数当两个数相等的时候一定要返回0！！！ Reverse Sort: 给你一个序列，每次操作能翻转一个区间，代价为这个区间的长度 在$O(nlogn)$的总代价内将整个序列排序 $$\text{ 归并排序 }$$ 从中间断开为左右区间 递归对两边分治 对已经有序的两边区间进行归并 123456789101112void work(int L,int R)&#123; if (L==R) return; work(L,Mid); work(Mid+1,R); int tl=L,tr=Mid+1,t=L; while (tl&lt;=Mid&amp;&amp;tr&lt;=R)&#123; if (A[tl]&lt;A[tr]) B[t++]=A[tl++];else B[t++]=A[tr++]; &#125; while (tl&lt;=Mid) B[t++]=A[tl++]; while (tr&lt;=R) B[t++]=A[tr++]; for (int i=L;i&lt;=R;i++) A[i]=B[i];&#125; STL大法吼！区间合并：inplace_merge 12//a[0..n-1],a[n..n*2-1]合并inplace_merge(a,a+n,a+n*2); 扩展：归并排序求逆序对 $$\text{ 不基于比较的排序算法 }$$ $$\text{ 桶排序 }$$一个萝卜一个坑 时间复杂度$O(n+m)$ $$\text{ 基数排序 }$$ 分段分别桶排，从低位到高位依次作为关键字 比如设当前所有数已经按后𝑘位排好了序，那么后𝑘+1位的排序就是按第𝑘+1位排，相同的就按原顺序排 视段长的大小，开这么多的桶，求出比𝑥小的数有多少个，然后快速把每个数放到该放的位置去。 [WC2017] 挑战]]></content>
      <tags>
        <tag>ZROI</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[测试]]></title>
    <url>%2F%E6%B5%8B%E8%AF%95%2F</url>
    <content type="text"><![CDATA[一级标题二级标题三级标题 代码当然是可以的 12345#include &lt;iostream&gt;using namespace std;int main()&#123; return 0;&#125; latex qwq $1$]]></content>
      <categories>
        <category>测试文档</category>
      </categories>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
